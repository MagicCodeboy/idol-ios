//
//  ViewersMaskView.m
//  云信全聚星
//
//  Created by 裴雪阳 on 16/5/26.
//  Copyright © 2016年 裴雪阳. All rights reserved.
//

#import "ViewersMaskView.h"
#import "UIBaseViewController.h"
#import "MessageModel.h"
#import "CellFrameModel.h"
#import "MessageCell.h"
#import "Customize.h"
#import "PXYPensonView.h"
#import "CountDownButton.h"
#import "TYWaveProgressView.h"
#import "danmuView.h"
#import "CustomView.h"
#import "UIView+FrameMethods.h"
#import "UIImageView+WebCache.h"
#import "UIButton+Block.h"
#import "LshLookerViewCell.h"
#import "PXYHeadViewModel.h"
#import "KLCPopup.h"
#import "UserModel.h"
#import "MajorModel.h"
#import "UIView+Toast.h"
#define VIEWERS @"headview"

#define SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)
#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)
#define kToolBarH 40
#define kTextFieldH 30
#define viewNumber  2

#import "UIView+BlockGesture.h"

@interface ViewersMaskView()<NIMChatManagerDelegate,UITextFieldDelegate,UICollectionViewDelegate,UICollectionViewDataSource,UICollectionViewDelegateFlowLayout>
{
    NSMutableArray *messageArray;


    BOOL f1;
    BOOL f2;
    NSString *oneViewId;
    NSString *twoViewId;

    BOOL isBigPlay;


    int oneViewGiftId;
    int twoViewGiftId;

    int giftNumber;

    bool sendbutton;
    bool sendbuttonrequest;
    int Money;

    NSArray *ButtonArray;
    NSTimer *countDownTimer;
    int secondsCountDown;

    UIView *LoadingblackView;
    int ButtonTag;

    KLCPopup* popup;

    long nowTime;
    
    NSLock* giftReadViewLock;
}



@property (nonatomic, weak) TYWaveProgressView *waveProgressView1;
@property(nonatomic,strong)NSMutableArray *GiftArray;
@property(nonatomic,strong)NSMutableArray *BigGiftArray;
@property(nonatomic,strong)danmuView *danmu;
@property (weak, nonatomic) IBOutlet UITableView *chatTabview;
@property (weak, nonatomic) IBOutlet UIView *View; //tabview
@property (weak, nonatomic) IBOutlet UIButton *giftButton;//礼物总　按钮
@property (weak, nonatomic) IBOutlet UIView *GiftButtonView;

@property (strong, nonatomic)PXYGiftView *gift;

@property (strong, nonatomic)CountDownButton *button;
@property (assign, nonatomic) BOOL giftButtonViewHidden;
@property (strong, nonatomic) PXYPensonView *PensonView;
@property (strong, nonatomic) UIView *backView;
@property (strong, nonatomic) NSString *Viewersnumber;
@property (strong ,nonatomic) NIMSession *session;

@end

@implementation ViewersMaskView

+ (instancetype)ViewersView
{
    return [[[NSBundle mainBundle]loadNibNamed:NSStringFromClass(self) owner:nil options:nil] lastObject];
}


-(void)awakeFromNib
{
    
    self.messageViewContent.constant = 120 * SHIJI_HEIGHT;
      // 键盘
    _custom = [customTf inputTF];
    [_custom.sendMessageBtn addTarget:self action:@selector(sendMsgBtnClick) forControlEvents:UIControlEventTouchUpInside];
    _custom.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, kToolBarH);
    _custom.hidden = YES;
    _custom.sendMessageTf.clearsOnBeginEditing = YES;
    _custom.sendMessageTf.delegate =self;
    
    //self.sendMessageButton.selected=NO;
    
    self.HeadView.layer.cornerRadius=self.HeadView.height/2;
    self.HeadView.layer.masksToBounds=YES;
    
    self.HeadGuanzhu.layer.cornerRadius=self.HeadGuanzhu.height/2;
    self.HeadGuanzhu.layer.borderColor=UIColorFromRGB(0xFCC148).CGColor;
    self.HeadGuanzhu.layer.borderWidth=1;
    self.HeadGuanzhu.layer.masksToBounds=YES;
    
    self.HeadImage.layer.cornerRadius=self.HeadImage.height/2;
    self.HeadImage.layer.masksToBounds=YES;

    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillChange:)
                                                 name:UIKeyboardWillChangeFrameNotification
                                               object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardDidShow:)
                                                 name:UIKeyboardDidShowNotification
                                                 object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardDidHide:) name:UIKeyboardDidHideNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillBeHidden:)
                                             name:UIKeyboardWillHideNotification
                                           object:nil];
    
    [self.View addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self
                                                                            action:@selector(endEdit)]];
    
    [self addSubview:_custom];
    
    
    self.chatTabview.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    _gift =  [PXYGiftView inPutsmallView];
    
    //ButtonArray = @[_GiftButton1,_GiftButton2,_GiftButton3,_GiftButton4];
    UIView *headView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, _chatTabview.frame.size.width, 20)];
    //    headView.layer.shadowOffset = CGSizeMake(_chatTabview.frame.size.width,20);
    //    headView.layer.shadowOpacity = 0.8;
    headView.layer.shadowColor =[UIColor blackColor].CGColor;
    _chatTabview.tableHeaderView=headView;
    
    [[NIMSDK sharedSDK].chatManager addDelegate:self];
    
    _GiftArray = [[NSMutableArray alloc]init];
    _BigGiftArray=[[NSMutableArray alloc]init];
    messageArray = [[NSMutableArray alloc] init];
    self.GiftButtonView.hidden = YES;
    [self insertSubview:self.GiftButtonView aboveSubview:self.View];
    [self insertSubview:self.chatTabview aboveSubview:self.View];

    _giftButtonViewHidden = NO;
    f1 = false;
    f2 = false;
    giftNumber = 1;
    sendbutton =false;
    sendbuttonrequest = true;
    Money = 0;
    
    self.messageBtnright.constant=65*SHIJI_WIDTH;
//    self.shareRight.constant=87*SHIJI_WIDTH;
    self.jietuRight.constant=65*SHIJI_WIDTH;
    self.messageleftcontant.constant=13*SHIJI_WIDTH;
    self.giftRightContant.constant=13*SHIJI_WIDTH;
    self.buttonWidth.constant=33*SHIJI_WIDTH;
    self.buttonHeight.constant=33*SHIJI_HEIGHT;
    

    [self insertSubview:self.chatTabview aboveSubview:self.View];

    self.Viewersnumber = @"";
    
    [self ShowWhaterEffect];
    
    [self initProgressView];

    [self ShowonlineList];
    [self bringSubviewToFront:self.GiftSendButton];
    [self insertSubview:self.GiftSendLabel aboveSubview:self.GiftSendButton];
    
    CGRect blurRect = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    LoadingblackView = [[UIView alloc] initWithFrame:blurRect];
    LoadingblackView.backgroundColor = [UIColor clearColor];
    UIImageView *image =[[UIImageView alloc]initWithImage:[UIImage imageNamed:@"xingyunfensi_1"]];
    image.frame = CGRectMake(SCREEN_WIDTH/2-530*SHIJI_WIDTH/4,100,530*SHIJI_WIDTH/2, 200*SHIJI_HEIGHT/2);
    [LoadingblackView addSubview:image];
    
     [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(baseguanzhu:) name:@"baseguanzhu" object:nil];
    
     [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(GiftButtonIndex:) name:@"GiftButtonIndex" object:nil];
    
    
    giftReadViewLock = [[NSLock alloc]init];
}


-(void)GiftButtonIndex:(NSNotification *)text
{
 
    [self.gift.smallviewl postServiceBefore];
    if([text.userInfo[@"startPlay"] integerValue]==1)
    {
        giftNumber=1;
    }
    
    if ([text.userInfo[@"number"] isEqualToString:@"0"]) {
        
        ButtonTag = 1;
        Money = 2;

        [self SendGiftWithIndex:(1)];
        
        
    }

    if ([text.userInfo[@"number"] isEqualToString:@"1"]) {
        
        ButtonTag = 2;
        Money = 3;

        [self SendGiftWithIndex:(2)];
        
        
    }
    if ([text.userInfo[@"number"] isEqualToString:@"2"]) {
        
        ButtonTag = 3;
        Money = 666;

        [self SendGiftWithIndex:(3)];


    }
    if ([text.userInfo[@"number"] isEqualToString:@"3"]) {
     
        ButtonTag = 4;
        Money = 5200;

        [self SendGiftWithIndex:(4)];

    }

}

-(void)SendGiftWithIndex:(int )index
{
    NSLog(@"====Money======%i=======%i==========",Money,[self.pxyViewersModel.userBalance.strength intValue]);
    
    if([self.pxyViewersModel.userBalance.strength intValue] >= Money)
    {
        
        [self RequestsendGift:@{
                                @"liveId":self.pxyViewersModel.userLive.liveId,
                                @"applauseId": [NSString stringWithFormat:@"%d",ButtonTag]}and:index];
        
    }
    else
    {
        self.Viewersnumber = @"chongzhi";
        NSDictionary *dict =[[NSDictionary alloc] initWithObjectsAndKeys:self.Viewersnumber,@"textTwo", nil];
        //创建通知
        NSNotification *notification =[NSNotification notificationWithName:@"Viewerstongzhi" object:nil userInfo:dict];
        //通过通知中心发送通知
        [[NSNotificationCenter defaultCenter] postNotification:notification];
    }
}
-(void)baseguanzhu:(NSNotification *)text
{
    if ([text.userInfo[@"textTwo"] isEqualToString:@"guanzhu"]) {
        self.HeadGuanzhu.hidden =YES;
        self.viewcontent.constant= 100.f;
    }
    if ([text.userInfo[@"textTwo"] isEqualToString:@"quxiaoguanzhu"]) {
        self.HeadGuanzhu.hidden =NO;
        self.viewcontent.constant= 150.f;
    }
}

- (IBAction)chatView:(id)sender {
    
    /**
     *  @author 王森, 16-07-09 18:07:17
     *
     *  回看
     */
    if (_pxyViewersModel.type==1) {
        UIButton *button=(UIButton *)sender;
        
        button.selected=!button.selected;
        
        if (button.selected==YES) {
               NSLog(@"点击");
        }
        else
        {
            NSLog(@"被点击了");

        }
        
        [UserModel shareUserInfo].isPause=button.selected;
        
    }
    /**
     *  @author 王森, 16-07-09 18:07:29
     *
     *  直播
     */
    else{
        if (_pxyViewersModel.gag)
        {
            [_custom.sendMessageTf resignFirstResponder];
            //custom.hidden = YES;
            
            [self makeToast:@"你已被主播禁言"];
        }
        else
        {
            [_custom.sendMessageTf becomeFirstResponder];
            _custom.hidden = NO;
        }
        
    }
}
- (void)keyboardWillBeHidden:(NSNotification*)aNotification
{
    
    //键盘高度
    CGRect keyBoardFrame = [[[aNotification userInfo] objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue];
    _custom.frame =keyBoardFrame;

}

- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    
    NSLog(@"键盘被点击");
    [self sendMsgBtnClick];
    
    return YES;
    
}



-(NSMutableArray *)headarray
{
    if (_headarray==nil)
    {
        _headarray=[NSMutableArray array];
       
    }
    return _headarray;
}

-(void)ShowonlineList
{
    
    UICollectionViewFlowLayout *flowOut=[[UICollectionViewFlowLayout alloc]init];
    flowOut.scrollDirection=UICollectionViewScrollDirectionHorizontal;
//    flowOut.sectionInset  = UIEdgeInsetsMake(0, 0, 0, 0);
    _ViewersListCollectionView=[[UICollectionView alloc]initWithFrame:CGRectMake(180, 22.5, SCREEN_WIDTH - 150-12-30-35, 41) collectionViewLayout:flowOut];
    _ViewersListCollectionView.backgroundColor=[UIColor clearColor];
    _ViewersListCollectionView.showsHorizontalScrollIndicator=NO;
    _ViewersListCollectionView.scrollEnabled=YES;
    _ViewersListCollectionView.delegate=self;
    _ViewersListCollectionView.dataSource=self;
    [self  addSubview:_ViewersListCollectionView];

    [_ViewersListCollectionView registerNib:[UINib nibWithNibName:@"LshLookerViewCell" bundle:nil] forCellWithReuseIdentifier:VIEWERS];
}

#pragma mark-UICollectionViewDelegate 的代理方法
-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return self.headarray.count;
    //return 5;
}
-(CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    return CGSizeMake(_ViewersListCollectionView.frame.size.height-11, _ViewersListCollectionView.frame.size.height-11);
}
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(3,0, 3, 0);
}

//每个section中不同的行之间的行间距
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout*)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section
{
    return 5;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    if (collectionView==_ViewersListCollectionView)
    {
        PXYHeadViewModel *model=nil;
        LshLookerViewCell *cell=[collectionView dequeueReusableCellWithReuseIdentifier:VIEWERS forIndexPath:indexPath];
        if (self.headarray.count) {
            model=self.headarray[indexPath.row];
            
            NSLog(@"观众页面的直播的观众的头像%@",model.picUrl);
            
            if (ISNULL(model.picUrl))
            {
                cell.lookerImage.image = [UIImage imageNamed:@"morentouxiang"];
            }
            else
            {
                [cell.lookerImage sd_setImageWithURL:[NSURL URLWithString:model.picUrl]];
            }
            
        }
        return cell;
    }
    return nil;
}
//点击collectionView某一行的时候调用
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    
    PXYHeadViewModel *model=nil;
    model=self.headarray[indexPath.row];
    
    if (ISNULL(model.Useid))
    {
        
        
    }
    else
    {
         NSDictionary *dict =[[NSDictionary alloc] initWithObjectsAndKeys:model.Useid,@"text",@"0",@"isAdmin", nil];
        //创建通知
        NSNotification *notification =[NSNotification notificationWithName:@"dianjigeren" object:nil userInfo:dict];
        //通过通知中心发送通知
        [[NSNotificationCenter defaultCenter] postNotification:notification];
    }

  }


//-(void)setItems:(NSArray *)items
-(void)setPxyViewersModel:(PXYViewersLiveModel *)pxyViewersModel
{
    _pxyViewersModel =pxyViewersModel;
    [self UpdataViewers];
    
}

-(void)UpdataViewers
{

    [self initHeadView];
    [self UpdatawaveProgressView];
    [self UpdataProgressView];
}


//关注
- (IBAction)GuanzhuButtonClick:(id)sender {
    
    [self RequestGuanzhu:@{@"followUserId":self.pxyViewersModel.user.userId,@"liveId":@0}];
    
}

-(void)CloseLiveRoom:(id)sender
{
    self.Viewersnumber = sender;
    NSDictionary *dict =[[NSDictionary alloc] initWithObjectsAndKeys:self.Viewersnumber,@"textTwo", nil];
    //创建通知
    NSNotification *notification =[NSNotification notificationWithName:@"Viewerstongzhi" object:nil userInfo:dict];
    //通过通知中心发送通知
    [[NSNotificationCenter defaultCenter] postNotification:notification];
}
//退出房间
- (IBAction)closeClick:(id)sender {
    
    
}
- (IBAction)Gift3Click:(UIButton *)sender {
    sender.tag = 3;
  
    Money = 666;
    
    NSLog(@"点击了带三个按钮");
    
    [self changeButtonState:sender buttons:ButtonArray];
    

}
- (IBAction)Gift1Click:(UIButton *)sender {
     sender.tag = 1;
    Money = 2;
    
    NSLog(@"点击了带一个按钮");
    [self changeButtonState:sender buttons:ButtonArray];

}

- (IBAction)Gift2Click:(UIButton *)sender {
     sender.tag = 2;
  
     NSLog(@"点击了带二个按钮");
    Money = 3;
    [self changeButtonState:sender buttons:ButtonArray];

}
- (IBAction)Gift4Click:(UIButton *)sender {
     sender.tag = 4;
     Money = 5200;
     NSLog(@"点击了带四个按钮");
    [self changeButtonState:sender buttons:ButtonArray];

    
}

- (IBAction)giftClick:(id)sender {
    
    self.GiftButtonView.hidden = self.giftButton.selected ;
    self.giftButton.selected = !self.giftButton.selected;
}
- (IBAction)GiftSendClick:(id)sender {
    

    _gift.XingbiNumber.text = self.pxyViewersModel.userBalance.strength;

    _gift.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, 150);

    [UIView animateWithDuration:0.3 animations:^{
       
        _gift.frame = CGRectMake(0, SCREEN_HEIGHT- 150, SCREEN_WIDTH, 150);
    }];
    [self addSubview:_gift];
}



-(void)RequestsendGift:(NSDictionary *)dic and:(int)index{
    
    [CLNetworkingManager postNetworkRequestWithUrlString:@"/rest/livesend/applause" parameters:dic isCache:NO succeed:^(id data) {

        [self.gift postServiceReturn];
        //NSLog(@"==================发送礼物=============%@",data);

        _pxyViewersModel.giftmessage=[PXYViewersSendGiftModel mj_objectWithKeyValues:data[@"userGift"]];
        _pxyViewersModel.anchorBalance.totalApplause =_pxyViewersModel.giftmessage.totalApplause;
        _pxyViewersModel.userBalance.strength =_pxyViewersModel.giftmessage.strength;
        _pxyViewersModel.userLive.lastStrength =_pxyViewersModel.giftmessage.strengthNum;
        [self UpdataViewers];

    if ([[AccountModel read].avatar isEqualToString:@""]) {
        [AccountModel read].avatar = @"gerenzhongxin－mongrentouxiang";
    }
    Customize *attachment = [[Customize alloc] init];
    attachment.custom_type = 6;
    attachment.gift_type = ButtonTag;
    attachment.gift_num = [self FindAttachmentnumber];
    attachment.head_url = [AccountModel read].avatar;
    attachment.nickname = [AccountModel read].nickName;
    attachment.user_id =[AccountModel read].userId;

    //NSLog(@"------lalala------%@--%@----%@---%@-",attachment.head_url,[AccountModel read].avatar,[AccountModel read].userId,[AccountModel shareAccount].userId);
    attachment.applause = _pxyViewersModel.giftmessage.totalApplause;//掌声
    attachment.strength =_pxyViewersModel.giftmessage.strengthNum;//进度条
    _gift.XingbiNumber.text=self.pxyViewersModel.userBalance.strength;

    //NSLog(@"==================观众发送掌声，进度条=========%@====%@",attachment.applause,attachment.strength);
    [self onSendgiftItem:(attachment)];

    if (index == 1 || index == 2) {
        
        self.gift.smallviewl.Lianjibeijing.hidden = NO;
        self.gift.smallviewl.ButtonClick.hidden = YES;
       // [self.gift changebuttonStatebuttons:self.gift.Buttonarray and: self.gift.Buttonarray[index-1]];


        [self.gift.smallviewl addSubview:_gift.smallviewl.timer2];
        
        [self.gift.smallviewl addSubview:_gift.smallviewl.lableTime];

        [self.gift.smallviewl addSubview:_gift.smallviewl.ButtonClick];
        [self.gift HiddenButtons:self.gift.Buttonarray];

        __block CGFloat i2 = 0;

        [_gift.smallviewl.timer2 startWithBlock:^CGFloat {
            return ((i2++ >= 100) ? (i2 = 0) : i2) / 100;
        }];

    }

    } fail:^(NSString *error) {
        [self.gift postServiceReturn];
        NSLog(@"sdfadf%@",error);

    }];
}


-(int)FindAttachmentnumber
{
    return giftNumber++;
}

- (void)setTimer {
    secondsCountDown = 3;
    if (nil == countDownTimer)
    {
        countDownTimer = [NSTimer scheduledTimerWithTimeInterval:1 target:self selector:@selector(timeFireMethod) userInfo:nil repeats:YES];
    }
    
}
- (void)stopTimer {
    [countDownTimer invalidate];
    countDownTimer = nil;
}


-(void)timeFireMethod{
    self.GiftSendLabel.text =[NSString stringWithFormat:@"%d",secondsCountDown];
      secondsCountDown--;
    if(secondsCountDown<=0){
        [self stopTimer];
        giftNumber =1;
        self.GiftSendLabel.text = @"发送";
    }
}
-(void)changeButtonState:(UIButton *)button buttons:(NSArray *)buttonArray
{
    ButtonTag = (int)button.tag;
    
    self.GiftSendLabel.hidden =NO;
    self.GiftSendButton.selected =YES;
    self.GiftSendLabel.text = @"发送";
    self.waveProgressView1.hidden = YES;
    
    self.TiliLable.hidden =NO;
    sendbutton = true;
    
    [self stopTimer];
    
    giftNumber =1;
    
    for (UIButton* b in buttonArray)
    {
        b.selected=NO;
    }
    button.selected=YES;
}
-(void)revertButtonbuttons:(NSArray *)buttonArray
{
    for (UIButton* b in buttonArray)
    {
        b.selected=NO;
    }
}

-(void)showCountDownButton
{
    CountDownButton *button = [[CountDownButton alloc]initWithFrame:CGRectMake(0, 0, 80, 80)];
    [button StartTiming];
}

-(void)onSendgiftItem:(Customize *)xiaoxi
{
    NIMCustomObject *object = [[NIMCustomObject alloc] init];
    object.attachment = xiaoxi;
    NIMMessage *message = [[NIMMessage alloc] init];
    message.messageObject = object;
    if(self.session==NULL)
    {
        self.session = [NIMSession session:self.pxyViewersModel.userLive.userLiveBase.roomId type:NIMSessionTypeChatroom];
    }
    [[NIMSDK sharedSDK].chatManager sendMessage:message toSession:self.session error:nil];
    [self initGiftMessage:(xiaoxi)];
    [self addCustomizeDataToFrame:xiaoxi];
    [_chatTabview reloadData];
    NSIndexPath *indexPath = [NSIndexPath indexPathForItem:messageArray.count- 1 inSection:0];
    [_chatTabview scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
}

-(void)ShowWhaterEffect{
    
    TYWaveProgressView *waveProgressView = [[TYWaveProgressView alloc]initWithFrame:CGRectMake(0, 0, self.GrayImageView.frame.size.width, self.GrayImageView.frame.size.height)];// 180 180
//    waveProgressView.center = self.GrayImageView.center;
//    waveProgressView.waveViewMargin = UIEdgeInsetsMake(0, 0, 20, 20);
    waveProgressView.backgroundImageView.image = [UIImage imageNamed:@""];
    if (ISNULL(self.pxyViewersModel.userBalance.strength)) {
        waveProgressView.numberLabel.text = @"0";
    }else
    {
        waveProgressView.numberLabel.text = self.pxyViewersModel.userBalance.strength;
    }
    waveProgressView.percent = 0.80;
    waveProgressView.numberLabel.font = [UIFont boldSystemFontOfSize:15];
    waveProgressView.numberLabel.textColor = [UIColor whiteColor];
    waveProgressView.unitLabel.text = @"";
    waveProgressView.unitLabel.font = [UIFont boldSystemFontOfSize:20];
    waveProgressView.unitLabel.textColor = [UIColor whiteColor];
    waveProgressView.explainLabel.text = @"星币";
    waveProgressView.explainLabel.font = [UIFont systemFontOfSize:15];
    waveProgressView.explainLabel.textColor = [UIColor whiteColor];
    waveProgressView.percent = 0.80;
    [self.GrayImageView addSubview:waveProgressView];
    _waveProgressView1 = waveProgressView;
    [_waveProgressView1 startWave];
<<<<<<< HEAD
    self.TiliLable.text =[NSString stringWithFormat:@"星币：%@",self.pxyViewersModel.userBalance.strength];
    
=======
    self.TiliLable.text =[NSString stringWithFormat:@"体力：%@",self.pxyViewersModel.userBalance.strength];
>>>>>>> 6b51e39a87c2b0fdcf961acc89862ef8e60f1e3c
}

-(void)UpdatawaveProgressView
{
    if (ISNULL(self.pxyViewersModel.userBalance.strength)) {
        _waveProgressView1.numberLabel.text = @"0";
    }else
    {
        _waveProgressView1.numberLabel.text = self.pxyViewersModel.userBalance.strength;
    }
    
    if (ISNULL(self.pxyViewersModel.userBalance.strength)) {
        self.TiliLable.text =[NSString stringWithFormat:@"星币：%@",@"0"];
    }
    else
    {
        self.TiliLable.text =[NSString stringWithFormat:@"星币：%@",self.pxyViewersModel.userBalance.strength];
    }
    
    _waveProgressView1.percent = 0.80;
    
}
-(void)initGiftMessage:(Customize *)message
{
//    if (_GiftArray.count <= 0) {
    //message.user_id==twoViewId
    if(message.gift_type==threeGift || message.gift_type==FourGift)
    {
        
        [_BigGiftArray addObject:message];
        // 一直发a 或者一直发b
        if ([message.user_id isEqualToString:oneViewId] || [message.user_id isEqualToString:twoViewId]){
            return;
    
        }
    }else{
        [_GiftArray addObject:message];
        // 一直发a 或者一直发b
        NSLog(@"测试----%@",message.user_id);
        NSLog(@"----%@",oneViewId);
        NSLog(@"----%d",[message.user_id isEqualToString:oneViewId]);
        NSLog(@"----%d",message.gift_type);
        if (([message.user_id isEqualToString:oneViewId] && message.gift_type==oneViewGiftId)|| ([message.user_id isEqualToString:twoViewId] && message.gift_type==twoViewGiftId) ){
            NSLog(@"----跳过");
            return;
        }
    }
    NSLog(@"----执行");
    [self checkShowView];
}
/*
 
 */
-(void)checkShowView{
    [giftReadViewLock lock];
    if (f1 ==false) {
        [self initGiftView:1];
    }else if (f2 == false)
    {
        [self initGiftView:2];
    }
    [giftReadViewLock unlock];
}

/**
 * @brief 初始化界面
 * @param  number 第几行
 * @return 返回空.
 */
-(void)initGiftView:(int)number
{
   // Customize *gift = [self.GiftArray firstObject];
    NSString *viewid;
    int viewGiftID ;
    if (number ==1) {
        viewid = twoViewId;
        viewGiftID = twoViewGiftId;
    }else if(number ==2)
    {
        viewid = oneViewId;
        viewGiftID = oneViewGiftId;

    }
    Customize *gift = [self NewNextComment:(viewid):(viewGiftID)];
    //giftitem *gift = self.messageArray[i];//获取第一个对象
    if (gift) {
        if((gift.gift_type==threeGift || gift.gift_type==FourGift))
        {
            if(isBigPlay==NO && f1==false && f2==false)
            {
                number=1;
                isBigPlay=true;
                f1 = true;
                oneViewId = gift.user_id;
                oneViewGiftId = gift.gift_type;
                [self createBulletComment:gift andint:number];
                [_BigGiftArray removeObject:gift];
            }
        }else{
            if(isBigPlay==NO){
                if (number ==1) {
                    f1 = true;
                    oneViewId = gift.user_id;
                    oneViewGiftId = gift.gift_type;
                }else if(number ==2)
                {
                    f2 = true;
                    twoViewId = gift.user_id;
                    twoViewGiftId = gift.gift_type;
                }
                [self createBulletComment:gift andint:number];
                [_GiftArray removeObject:gift];
            }
        }
    }
}

- (instancetype)initWithFrame:(CGRect)frame{
    self = [super initWithFrame:frame];
    if(self){

    }
    return self;
}

-(void)initHeadView{
    if ([self.pxyViewersModel.user.avatar isEqualToString:@""]) {
        self.HeadImage.image = [UIImage imageNamed:@"morentouxiang"];
    }else{
        [self.HeadImage sd_setImageWithURL:[NSURL URLWithString:self.pxyViewersModel.user.avatar]];
    }
    
    self.HeadName.text =self.pxyViewersModel.user.nickName;
    if(self.pxyViewersModel.type==2)
    {
        self.HeadOnlineNumber.text=@"";
        
    }
    else if(self.pxyViewersModel.type==0)
    {
       if (![StringWithFormat(self.pxyViewersModel.userLive.liveHitsStr) isEqualToString:@"(null)"])
         {
            self.HeadOnlineNumber.text = [NSString stringWithFormat:@"在线 %@",self.pxyViewersModel.userLive.liveHitsStr];
         }
        else
         {
          self.HeadOnlineNumber.text=@"0";
         }
    }else{
        if (![StringWithFormat(self.pxyViewersModel.userLive.backHitsStr) isEqualToString:@"(null)"])
        {
            self.HeadOnlineNumber.text = [NSString stringWithFormat:@"%@人看过",self.pxyViewersModel.userLive.backHitsStr];
        }
        else
        {
            self.HeadOnlineNumber.text=@"0";
        }
    }
        self.zhangsheng.text = [NSString stringWithFormat:@"收到掌声：%@",self.pxyViewersModel.anchorBalance.totalApplause];
       NSLog(@"----------------裴雪阳 收到掌声%@",self.pxyViewersModel.anchorBalance.totalApplause);
    
        if ([StringWithFormat(self.pxyViewersModel.user.vip) isEqualToString:@"0"])
        {
           self.vipUserimage.hidden=YES;
        }
        else
        {
          self.vipUserimage.hidden=NO;
        }
    
       if (self.pxyViewersModel.follow)
       {
        self.HeadGuanzhu.hidden =YES;
        self.viewcontent.constant= 100.f;
       }
}

-(void)initProgressView{
    self.pxyProgressView = [[ProgressView alloc] initWithFrame:CGRectMake(SCREEN_WIDTH-20, 120, 7, 350)];
    NSLog(@"--------进度条-1-----%@-------%@---",self.pxyViewersModel.userLive.lastStrength,self.pxyViewersModel.userLive.interactValue);
    self.pxyProgressView.hidden = YES;
    [self.View addSubview:self.pxyProgressView];
}

-(void)UpdataProgressView
{
    if ([StringWithFormat(_pxyViewersModel.prize) isEqualToString:@"1"]) {
        self.pxyProgressView.hidden = NO;
        
        if ( [self.pxyViewersModel.userLive.interactValue isEqualToString:@"0"]) {
            self.pxyProgressView.hidden =YES;
        }else
        {
            CGFloat mini= [self.pxyViewersModel.userLive.lastStrength  doubleValue]/[ self.pxyViewersModel.userLive.interactValue doubleValue];
            NSLog(@"-------%f-----mini----",mini);
            self.pxyProgressView.progress = mini;
        }

    }else
    {
        self.pxyProgressView.hidden =YES;
    }
}
- (void)slider:(int )number
{
    self.pxyProgressView.progress = number;
}

-(void)GrayImageViewClicked:(UITapGestureRecognizer *)sender
{
    if (_giftButtonViewHidden) {
        _giftButtonViewHidden = NO;
        self.GiftButtonView.hidden = YES;
    }else {
        _giftButtonViewHidden = YES;
        self.GiftButtonView.hidden = NO;
    }
}
-(void)Effctbuttonclick:(UIButton *)sender {
    self.GiftButtonView.hidden = self.giftButton.selected;
    self.giftButton.selected = !self.giftButton.selected;
}
-(void)createBulletComment:(Customize *)gift andint:(int)number{
    _danmu = [[danmuView alloc]initWithContent:gift];
    if (number == 1) {
        _danmu.frame =CGRectMake(-50, SCREEN_HEIGHT/2+70, 200, 50);
    }if (number == 2) {
        _danmu.frame =CGRectMake(-50, SCREEN_HEIGHT/2, 200, 50);
    }
    [_danmu comeAnimation:(gift.gift_num)];
    [self.View addSubview:_danmu];
    
    __weak typeof(self) wself =self;
    __weak typeof(danmuView *) wdanmu = _danmu;
    _danmu.doubleLableAnimationFanishBlock =^{
            NSString * otherViewId;
            int viewGiftid;
            if (number==1) {
                otherViewId = twoViewId;
                viewGiftid =twoViewGiftId;
            }
            else if (number==2)
            {
                otherViewId = oneViewId;
                viewGiftid =oneViewGiftId;
            }
        
            int numTime=(gift.gift_type==threeGift || gift.gift_type==FourGift)?3:1;
            if (otherViewId ==nil) {
//             [wdanmu outAnimation];
            }
            Customize *comment = [wself NewNextComment:(otherViewId):(viewGiftid)];
            if (comment) {
                if(!(comment.gift_type==threeGift || comment.gift_type==FourGift))
                {
                    if ((comment.gift_type == gift.gift_type) && ([comment.user_id isEqualToString: gift.user_id]) && (comment.gift_num !=1)) {
                        [_GiftArray removeObject:comment];
                        [wdanmu doubleLableAnimation:comment.gift_num];
                        //[self createBulletComment:comment andint:number];
                    }
                    else{
                        [wdanmu outAnimation:numTime];
                    }
                }else{
                    [wdanmu outAnimation:numTime];
                }
            }
            else
            {
                [wdanmu outAnimation:numTime];
    
            }
    };
    
    _danmu.FanishBlock =^{
//        Customize *comment = [wself nextComment];
//        if (comment) {
//            [wself createBulletComment:comment andint:number];
//            
//        }
        
        if (number == 1) {
            f1 =false;
            oneViewId=nil;
            oneViewGiftId=0;
        }
        if (number==2) {
            f2 =false;
            twoViewId=nil;
            twoViewGiftId=0;
        }
        if(isBigPlay==YES && f1==false && f2==false && (gift.gift_type==threeGift || gift.gift_type==FourGift))
        {
            isBigPlay=NO;
            [wself checkShowView];
        }
        [wself checkShowView];
    };
}

//- (Customize *)nextComment {
//    Customize *comment = [_GiftArray firstObject];
//    if (comment) {
//        [_GiftArray removeObjectAtIndex:0];
//    }
//    return comment;
//}

- (Customize *)NewNextComment :(NSString *)userid:(int)Giftid{
    if(_BigGiftArray.count>0)
    {
        return [_BigGiftArray firstObject];
    }else{
        if (_GiftArray.count == 0) {
            return nil;
        }
        for (int i = 0; i<_GiftArray.count; i++) {
            Customize *cust = _GiftArray[i];
        
            if ((![cust.user_id isEqualToString: userid])||(cust.gift_type!=Giftid )) {
                return cust;
            }
        }
        return nil;
    }
}

- (void)selectMenuAtIndex:(NSInteger)index {
    NSLog(@"选中:%zd",index);
}

-(void)addDataToFrame:(NIMMessage *)message
{
    [self addDataToFrame:message type:Chat fromName:NULL];
}

-(void)addDataToFrame:(NIMMessage *)message type:(MessageModelType) type fromName:(NSString *)fromName
{
    MessageModel *messagemodel = [MessageModel messageModelWithRCMessage:message];
    messagemodel.text = message.text;
    messagemodel.type=type;
    if(fromName==NULL)
    {
        NIMMessageChatroomExtension *ext=(NIMMessageChatroomExtension *) message.messageExt;
        if(![StringWithFormat(ext.roomNickname) isEqualToString:@"(null)"])
        {
            messagemodel.name = ext.roomNickname;
        }
    }else{
        messagemodel.name=fromName;
    }
    messagemodel.userId=message.from;
    CellFrameModel *cellFrame = [[CellFrameModel alloc] init];
    cellFrame.message = messagemodel;
    if ([message.text isEqualToString:@""])
    {
        
    }
    else
    {
        [messageArray addObject:cellFrame];
    }
}




-(void)addCustomizeDataToFrame:(Customize *)customize
{
    MessageModel *messagemodel = [MessageModel messageModelWithCustomize:customize];
    //messagemodel.text = customize.nickname;
//    if (!messagemodel.name) {
//        messagemodel.name =[AccountModel read].nickName;
//    }else
//    {
        messagemodel.name =customize.nickname;
//    }
    messagemodel.userId = customize.user_id;
    switch (customize.gift_type) {
        case 1:
            messagemodel.text  = @"送了一个掌声";
            break;
        case 2:
            messagemodel.text  = @"送了一个rock";
            break;
        case 3:
            messagemodel.text  = @"送了一个飞吻";
            break;
        case 4:
            messagemodel.text  = @"送了一个欢呼";
            break;
        default:
            break;
    }
    
    messagemodel.type = Gift;
    CellFrameModel *cellFrame = [[CellFrameModel alloc] init];
    cellFrame.message = messagemodel;
    [messageArray addObject:cellFrame];
}

- (void)updata:(NIMMessage *)message{
    [self updata:message type:Chat fromName:nil];
}

- (void)updata:(NIMMessage *)message type:(MessageModelType) type fromName:(NSString *)fromName
{
    dispatch_async(dispatch_get_main_queue(), ^{
        // 更UI
        //[messageArray addObject:message];
        [self addDataToFrame:message type:type fromName:fromName];
        [_chatTabview reloadData];
        NSIndexPath *indexPath = [NSIndexPath indexPathForItem:messageArray.count- 1 inSection:0];
        [_chatTabview scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
    });
    
}

- (void)keyboardWillChange:(NSNotification *)note
{
    NSDictionary *userInfo = note.userInfo;
    CGFloat duration = [userInfo[@"UIKeyboardAnimationDurationUserInfoKey"] doubleValue];
    CGRect keyFrame = [userInfo[@"UIKeyboardFrameEndUserInfoKey"] CGRectValue];

    CGFloat moveY = keyFrame.origin.y - self.frame.size.height;
    [UIView animateWithDuration:duration animations:^{
        self.View.transform = CGAffineTransformMakeTranslation(0, moveY);
        self.chatTabview.transform =CGAffineTransformMakeTranslation(0, moveY);
        self.ViewersListCollectionView.transform =CGAffineTransformMakeTranslation(0, moveY);
            NSLog(@"====keyFrame.origin.y====%f=",keyFrame.origin.y); //44
            _custom.frame = CGRectMake(0, keyFrame.origin.y-kToolBarH-8, self.bounds.size.width, kToolBarH);
    }
        ];
}


-(void)keyboardDidShow:(NSNotification *)note
{
    [self insertSubview:self.View aboveSubview:self.chatTabview];
    
    if (self.delegatetouch) {
        [self.delegatetouch touchview:(NO)];
    }

}
-(void)keyboardDidHide:(NSNotification *)note
{
    [self insertSubview:self.chatTabview aboveSubview:self.View];
    
    if (self.delegatetouch) {
        [self.delegatetouch touchview:(YES)];
    }
    
}


#pragma mark - 表的协议方法
-(void)backViewClicked
{
    [_backView removeFromSuperview];
    [_PensonView removeFromSuperview];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return messageArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellIdentifier = @"cell";
    MessageCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];
    if (cell == nil) {
        cell = [[MessageCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellIdentifier];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.backgroundColor = [UIColor clearColor];

    cell.cellFrame = messageArray[indexPath.row];
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //    _backView = [[UIView alloc]initWithFrame:[UIScreen mainScreen].bounds];
    //    _backView.backgroundColor =[UIColor blackColor];
    //    _backView.alpha = 0.5f;
    //    [self addSubview:_backView];
    
    //    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(backViewClicked)];
    //    [_backView addGestureRecognizer:tap];
    //

    
    //    UITableViewCell * cell = [tableView cellForRowAtIndexPath:indexPath];
    //    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
}



- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CellFrameModel *cellFrame = messageArray[indexPath.row];
    return cellFrame.cellHeght;
}

//设置不同字体颜色
-(void)fuwenbenLabel:(UILabel *)labell FontNumber:(id)font AndRange:(NSRange)range AndColor:(UIColor *)vaColor
{
    NSMutableAttributedString *str = [[NSMutableAttributedString alloc] initWithString:labell.text];
    //设置字号
    [str addAttribute:NSFontAttributeName value:font range:range];
    //设置文字颜色
    [str addAttribute:NSForegroundColorAttributeName value:vaColor range:range];
    labell.attributedText = str;
}

//发送文字
- (void)sendMsgBtnClick
{
    if (_pxyViewersModel.gag)
    {
        [self makeToast:@"你已被主播禁言,不能发送消息"];
        
    }
    else
    {
        [_custom.sendMessageTf resignFirstResponder];

        
        NSString *newString=[_custom.sendMessageTf.text stringByReplacingOccurrencesOfString:@" " withString:@""];
        
        if (newString.length!=0) {
            NIMMessage *message = [[NIMMessage alloc] init];
            message.text    = _custom.sendMessageTf.text;
            //构造会话
            NIMSession *session = [NIMSession session:self.pxyViewersModel.userLive.userLiveBase.roomId type:NIMSessionTypeChatroom];
            //发送消息
            [[NIMSDK sharedSDK].chatManager sendMessage:message toSession:session error:nil];
            //[self updata:message.text];
            [self updata:message];
        }

    }
    
    _custom.hidden = YES;
}

- (void)textFieldDidBeginEditing:(UITextField *)textField
{
    
}


- (void)endEdit
{
    
    [self.View endEditing:YES];
    
    [UIView animateWithDuration:0.3 animations:^{
        
        _gift.frame = CGRectMake(0, SCREEN_HEIGHT, SCREEN_WIDTH, 150);
    }];
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [_gift removeFromSuperview];
        
    });
    self.GiftButtonView.hidden = YES;
    self.GiftSendButton.selected = NO;
    sendbutton =false;
    self.GiftSendLabel.hidden =YES;
    self.waveProgressView1.hidden = NO;
    [self stopTimer];
    [self revertButtonbuttons:ButtonArray];
    self.TiliLable.hidden =YES;

    [self endEditing:YES];
    _custom.hidden = YES;
}

-(void)sendMessage:(NIMMessage * )message didCompleteWithError:(NSError *)error
{
    if(!error)
    {
        NSLog(@"--------发送消息成功－－－－－");
    }else
    {
        NSLog(@"--------发送消息失败－－－－－");
    }
}


-(void)UpdataOnlineNumber:(NSString *)number
{
    if(self.pxyViewersModel.type==0)
    {
        self.HeadOnlineNumber.text = [NSString stringWithFormat:@"在线 %@",number];
    }
}


-(void)onRecvMessages:(NSArray *)messages{
    for (NIMMessage *message in messages){
        if (message.messageType ==NIMMessageTypeText ) {
            NSLog(@"RCTextMessage消息内容：%@", message.text);
            [self updata:message];
            [_chatTabview reloadData];
       
        }else if (message.messageType == NIMMessageTypeNotification){

            
        }
        else if (message.messageType == NIMMessageTypeCustom){
            
//            
//            attachment.applause = _pxyViewersModel.userBalance.applause;
//            attachment.strength =_pxyViewersModel.userBalance.strength;
//
            NSLog(@"---------%@",message);
            NIMCustomObject *object = (NIMCustomObject *)message.messageObject;
            Customize *attachment  = (Customize *)object.attachment;
            if(attachment!=NULL)
            {
                switch (attachment.custom_type) {
                    case 8:
                    {
                            
                        self.pxyProgressView.progress = 0.0f;
                        NSLog(@"--------------收到消息8-－－－－－－－");
                         //抽奖loading
       
                        [self addSubview:LoadingblackView];
                        
//                        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(3 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
//                            [LoadingblackView removeFromSuperview];
//                            
//                        });
                        break;
                    }
                    case 9:
                    {
                        [LoadingblackView removeFromSuperview];
                        NSLog(@"--------收到消息9-－－－");
//                        if (LoadingblackView) {
//                            [LoadingblackView removeFromSuperview];
//                        }
                 
                        NSLog(@"--------------收到消息9-－－－－－－－");
                        NSString *str =[AccountModel read].userId;
                        
                        NSLog(@"------------当前id 获奖id---live id----%@ %@--  %@",str,self.pxyViewersModel.user.userId,attachment.user_id);
//                        
                        //抽奖loading消失
                       
                        
                        if (attachment.lottery) {
                            self.pxyProgressView.hidden = YES;
                        }
                        
                        if([[AccountModel read].userId isEqualToString:attachment.user_id])
                        {
                            [self GetPensonData:@{@"liveId":self.pxyViewersModel.userLive.liveId,@"userId":attachment.user_id }:YES];
                            
                        }
                        else
                        {
                            [self GetPensonData:@{@"liveId":self.pxyViewersModel.userLive.liveId,@"userId":attachment.user_id }:NO];
                        }
                      
                        break;
                    }
                    case 2:
                    {
                       //直播已经结束，通知所有客户端判断推出。
                       // 结束，群发给所有人提示直播已经结束（安卓IOS判断）（后台发已作）
                        if ([StringWithFormat(attachment.live_id) isEqualToString:self.pxyViewersModel.userLive.liveId])
                        {
                            [self CloseLiveRoom:@"guanbiwait"];
                        }
                        
                        break;
                        
                        
                    }
                    case 22:
                    {
                        //直播已经结束，通知所有客户端判断推出。
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId]) {
                            
                            [self CloseLiveRoom:@"guanbiqiang"];
                        }
                        
                        break;
                        
                    }
                    case 20:
                    {
                        //预告开播前的即时通讯消息
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.livePrevue.livePrevueId]) {
                            
                             [self CloseLiveRoom:@"liveYugao"];
                        }
                       
                        break;
                        
                    }
                        
                    case 0:
                    {
                    //踢人
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId] && [StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId]) {
                            
                              [self CloseLiveRoom:@"tiren"];
                        }
                        break;
                    }
                    case 1:
                    {
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId] && [StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId]) {
                            //禁言
                            [self CloseLiveRoom:@"nomessage"];
                        }
                        break;
                    }
                    case 3:
                    {
                         //解除禁言
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId] && [StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId]) {
                               [self CloseLiveRoom:@"cansendmessage"];
                        }
                        break;
                    }
                    case 30:
                    {
                        //添加用户为管理员
                        if ([StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId]) {
                            [self CloseLiveRoom:@"addManager"];
                        }
                        break;
                    }
                    case 31:
                    {
                        //解除管理员
                        if ([StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId]) {
                            [self CloseLiveRoom:@"deleteManager"];
                        }
                        break;
                    }

                    case 4:
                    {
                    //暂停直播
                        if ([StringWithFormat(attachment.live_id)  isEqualToString:_pxyViewersModel.userLive.liveId]) {
                            [self CloseLiveRoom:@"pause"];
                        }
                        break;
                    }
                    case 5:
                    {
                    //继续直播
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId]) {
                            [self CloseLiveRoom:@"keepLiving"];
                        }
                        break;
                    }
                    case 6:
                    {//连续礼物
                       // if ([StringWithFormat(attachment.user_id) isEqualToString:_pxyViewersModel.userBalance.userId])
                        
                            self.zhangsheng.text = [NSString stringWithFormat:@"收到掌声：%@",attachment.applause ];
                        
                            [self initGiftMessage:(attachment)];
                            [self addCustomizeDataToFrame:attachment];
                            [_chatTabview reloadData];
                        
                            NSIndexPath *indexPath = [NSIndexPath indexPathForItem:messageArray.count- 1 inSection:0];
                            [_chatTabview scrollToRowAtIndexPath:indexPath atScrollPosition:UITableViewScrollPositionBottom animated:YES];
                        //}
                        break;
                    }
                    case 7:
                    {
                    //大型礼物
                        break;
                    }
                    case 10:
                    {
                    //没开始直接直播
                        if ([StringWithFormat(attachment.live_id) isEqualToString:_pxyViewersModel.userLive.liveId]) {
                            
                            [self CloseLiveRoom:@"tiqianzhibo"];
                        }
                        
                        break;
                    }
                        // 退出直播
                    case 23:
                    {
                        NSLog(@"----------观众----23-----------");

                        NSLog(@"---退出--attachment.user_id---%@--%@   %@-----",attachment.user_id,attachment.liveHitsStr,attachment.head_url);
                        
                        if(![StringWithFormat(attachment.user_id) isEqualToString:[AccountModel read].userId])
                        {
                            for (PXYHeadViewModel *model in _headarray) {
                                if ([StringWithFormat(model.Useid) isEqualToString:StringWithFormat(attachment.user_id)]) {
                                    [_headarray removeObject:model];
                                    [_ViewersListCollectionView reloadData];
                                    break;
                                }
                            }
                        }
                        
                        self.pxyViewersModel.userLive.liveHitsStr = attachment.liveHitsStr;
                        self.HeadOnlineNumber.text = [NSString stringWithFormat:@"在线 %@",self.pxyViewersModel.userLive.liveHitsStr];
                        
                        break;
                    }
                    //进入房间
                    case 24:
                    {
                        NSLog(@"---------观众-----24-----------");
                         NSLog(@"--- 进入--attachment.user_id---%@--%@   %@-----",attachment.user_id,attachment.liveHitsStr,attachment.head_url);
                        
                        PXYHeadViewModel *model=[[PXYHeadViewModel alloc]init];

                        self.pxyViewersModel.userLive.liveHitsStr = attachment.liveHitsStr;
                        self.HeadOnlineNumber.text = [NSString stringWithFormat:@"在线 %@",self.pxyViewersModel.userLive.liveHitsStr];

                        model.Useid = attachment.user_id;
                        model.picUrl = attachment.head_url;
                        
                        bool isExist=false;
                        for (PXYHeadViewModel *model in _headarray) {
                            if ([StringWithFormat(model.Useid) isEqualToString:StringWithFormat(attachment.user_id)]) {
                                isExist=true;
                                break;
                            }
                        }
                        if(!isExist)
                        {
                        if (_headarray.count <20) {
                            [_headarray insertObject:model atIndex:0];
                            
                        }else
                        {
                            [_headarray removeLastObject];
                            
                            [_headarray insertObject:model atIndex:0];
                        }
                        [_ViewersListCollectionView reloadData];

                        }
                        break;
                    }
                }
            }
        }
    }
}

-(void)GetPensonData:(NSDictionary *)dic :(BOOL )Ismyself
{
    [CLNetworkingManager getNetworkRequestWithUrlString:@"/rest/liveprize/user" parameters: dic isCache:NO succeed:^(id data) {
        
        NSLog(@"=========抽奖=========获取个人信息=============%@",data);
        self.pxyViewersModel.prizeRecord =[PXYAwardsModel mj_objectWithKeyValues:data[@"prizeRecord"]];
        
        self.pxyViewersModel.liveShare = [LiveShare mj_objectWithKeyValues:data[@"liveShare"]];
        
        if (Ismyself) {
           _fanown = [LuckFansOwn  LuckFansOwnView];
            //分享按钮的点击事件
            [_fanown.shareButton addActionHandler:^(NSInteger tag) {
             
                self.Viewersnumber = @"luckShare";
                NSDictionary *dict =[[NSDictionary alloc] initWithObjectsAndKeys:self.Viewersnumber,@"textTwo",_pxyViewersModel,@"model", nil];
                //创建通知
                NSNotification *notification =[NSNotification notificationWithName:@"Viewerstongzhi" object:nil userInfo:dict];
                //通过通知中心发送通知
                [[NSNotificationCenter defaultCenter] postNotification:notification];
              
            }];
            [_fanown.GiftView  sd_setImageWithURL:[NSURL URLWithString:self.pxyViewersModel.prizeRecord.prize.picUrl]];
            _fanown.GiftLable.text = self.pxyViewersModel.prizeRecord.prize.title;

            _fanown.frame = CGRectMake((SCREEN_WIDTH - 267)/2, (SCREEN_HEIGHT-400)/2, 267, 400);
            [self addSubview:_fanown];
            
        }else
        {
             _otherfans = [LuckFansOthers LuckFansOtherView];
            if([self.pxyViewersModel.prizeRecord.user.avatar isEqualToString:@""])
            {
                _otherfans.Headimage.image=[UIImage imageNamed:@"morentouxiang"];
            }else{
                [_otherfans.Headimage sd_setImageWithURL:[NSURL URLWithString:self.pxyViewersModel.prizeRecord.user.avatar]];
            }
            [_otherfans.GiftImage  sd_setImageWithURL:[NSURL URLWithString:self.pxyViewersModel.prizeRecord.prize.picUrl]];
            _otherfans.NameLable.text =self.pxyViewersModel.prizeRecord.user.nickName;
            _otherfans.frame = CGRectMake((SCREEN_WIDTH - 267)/2, (SCREEN_HEIGHT-345)/2, 267, 345);
            [self addSubview:_otherfans];
         }
    } fail:^(NSString *error) {
         NSLog(@"==================获取个人信息失败=============");
        
    }];
    
}

//关注
-(void)RequestGuanzhu:(NSDictionary *)dic
{
    [CLNetworkingManager postNetworkRequestWithUrlString:@"/rest/follow/add" parameters:dic isCache:NO succeed:^(id data) {
        NSLog(@"==================关注成功=============%@",data);
        self.HeadGuanzhu.hidden =YES;
        self.viewcontent.constant= 100.f;

    } fail:^(NSString *error) {
        
    }];
}

- (IBAction)SendNewGiftClick:(id)sender {
    
    
}


- (void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
    [[NIMSDK sharedSDK].chatManager removeDelegate:self];
}


@end
